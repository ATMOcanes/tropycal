.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_tracks.storm.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_tracks.storm.py:


=========================
Individual Storm Analysis
=========================
This sample script illustrates how to retrieve a single storm from the HURDAT2 dataset, and make plots and analyses of this storm.


.. code-block:: default


    import tropycal.tracks as tracks
    import datetime as dt







HURTDAT2 Dataset
----------------
Let's start by creating an instance of a TrackDataset object. By default, this reads in the HURDAT2 dataset from the National Hurricane  Center (NHC) website. For this example we'll be using the HURDAT2 dataset over the North Atlantic basin.

HURDAT data is not available for the most recent hurricane seasons. To include the latest data up through today, the "include_btk" flag  would need to be set to True, which reads in preliminary best track data from the NHC website.


.. code-block:: default


    hurdat_atl = tracks.TrackDataset(basin='north_atlantic',source='hurdat',include_btk=False)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    --> Starting to read in HURDAT2 data
    --> Completed reading in HURDAT2 data (5.6 seconds)



Individual storm analysis
-------------------------
Individual storms can be retrieved from the dataset by calling the ``get_storm()`` function, which returns an instance of a Storm object. This can be done by either entering a tuple containing the storm name and year, or by the standard tropical cyclone ID (e.g., "AL012019").

Let's retrieve an instance of Hurricane Michael from 2018:


.. code-block:: default


    storm = hurdat_atl.get_storm(('michael',2018))







This instance of Storm contains several methods that return the storm data back in different data types. The following examples will show # how to retrieve 3 different data types.

Retrieve a dictionary of Michael's data:


.. code-block:: default


    print(storm.to_dict())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'id': 'AL142018', 'operational_id': 'AL142018', 'name': 'MICHAEL', 'year': 2018, 'season': 2018, 'basin': 'north_atlantic', 'source_info': 'NHC Hurricane Database', 'source': 'hurdat', 'date': [datetime.datetime(2018, 10, 6, 18, 0), datetime.datetime(2018, 10, 7, 0, 0), datetime.datetime(2018, 10, 7, 6, 0), datetime.datetime(2018, 10, 7, 12, 0), datetime.datetime(2018, 10, 7, 18, 0), datetime.datetime(2018, 10, 8, 0, 0), datetime.datetime(2018, 10, 8, 6, 0), datetime.datetime(2018, 10, 8, 12, 0), datetime.datetime(2018, 10, 8, 18, 0), datetime.datetime(2018, 10, 9, 0, 0), datetime.datetime(2018, 10, 9, 6, 0), datetime.datetime(2018, 10, 9, 12, 0), datetime.datetime(2018, 10, 9, 18, 0), datetime.datetime(2018, 10, 10, 0, 0), datetime.datetime(2018, 10, 10, 6, 0), datetime.datetime(2018, 10, 10, 12, 0), datetime.datetime(2018, 10, 10, 17, 30), datetime.datetime(2018, 10, 10, 18, 0), datetime.datetime(2018, 10, 11, 0, 0), datetime.datetime(2018, 10, 11, 6, 0), datetime.datetime(2018, 10, 11, 12, 0), datetime.datetime(2018, 10, 11, 18, 0), datetime.datetime(2018, 10, 12, 0, 0), datetime.datetime(2018, 10, 12, 6, 0), datetime.datetime(2018, 10, 12, 12, 0), datetime.datetime(2018, 10, 12, 18, 0), datetime.datetime(2018, 10, 13, 0, 0), datetime.datetime(2018, 10, 13, 6, 0), datetime.datetime(2018, 10, 13, 12, 0), datetime.datetime(2018, 10, 13, 18, 0), datetime.datetime(2018, 10, 14, 0, 0), datetime.datetime(2018, 10, 14, 6, 0), datetime.datetime(2018, 10, 14, 12, 0), datetime.datetime(2018, 10, 14, 18, 0), datetime.datetime(2018, 10, 15, 0, 0), datetime.datetime(2018, 10, 15, 6, 0), datetime.datetime(2018, 10, 15, 12, 0), datetime.datetime(2018, 10, 15, 18, 0)], 'extra_obs': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'special': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'L', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'type': ['LO', 'LO', 'TD', 'TS', 'TS', 'TS', 'TS', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'HU', 'TS', 'TS', 'TS', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX', 'EX'], 'lat': [17.8, 18.1, 18.4, 18.8, 19.1, 19.7, 20.2, 20.9, 21.7, 22.7, 23.7, 24.6, 25.6, 26.6, 27.7, 29.0, 30.0, 30.2, 31.5, 32.8, 34.1, 35.6, 36.5, 37.3, 39.1, 41.1, 43.1, 44.8, 46.4, 47.6, 48.4, 48.8, 48.6, 47.5, 45.9, 44.4, 42.8, 41.2], 'lon': [-86.6, -86.9, -86.8, -86.4, -85.7, -85.5, -85.4, -85.1, -85.1, -85.2, -85.8, -86.2, -86.4, -86.5, -86.6, -86.3, -85.5, -85.4, -84.5, -83.2, -81.7, -80.0, -77.7, -75.0, -70.6, -66.1, -61.5, -55.7, -48.2, -40.7, -33.1, -26.1, -20.7, -16.4, -13.5, -11.4, -10.3, -10.0], 'vmax': [25, 25, 30, 35, 45, 50, 60, 65, 75, 85, 85, 90, 100, 110, 120, 125, 140, 135, 80, 50, 45, 45, 50, 60, 60, 60, 65, 65, 65, 65, 65, 65, 60, 55, 55, 50, 35, 35], 'mslp': [1006, 1004, 1004, 1003, 999, 996, 984, 982, 977, 971, 973, 968, 961, 952, 945, 934, 919, 920, 957, 979, 987, 991, 988, 983, 980, 977, 975, 975, 975, 975, 975, 975, 975, 978, 982, 989, 996, 1001], 'wmo_basin': ['north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic', 'north_atlantic'], 'ace': 12.505000000000003}



Retrieve xarray Dataset object with Michael's data:


.. code-block:: default


    print(storm.to_xarray())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:    (time: 38)
    Coordinates:
      * time       (time) datetime64[ns] 2018-10-06T18:00:00 2018-10-07 ...
    Data variables:
        extra_obs  (time) int32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ...
        special    (time) <U1 '' '' '' '' '' '' '' '' '' '' '' '' '' '' '' '' ...
        type       (time) <U2 'LO' 'LO' 'TD' 'TS' 'TS' 'TS' 'TS' 'HU' 'HU' 'HU' ...
        lat        (time) float64 17.8 18.1 18.4 18.8 19.1 19.7 20.2 20.9 21.7 ...
        lon        (time) float64 -86.6 -86.9 -86.8 -86.4 -85.7 -85.5 -85.4 ...
        vmax       (time) int32 25 25 30 35 45 50 60 65 75 85 85 90 100 110 120 ...
        mslp       (time) int32 1006 1004 1004 1003 999 996 984 982 977 971 973 ...
        wmo_basin  (time) <U14 'north_atlantic' 'north_atlantic' ...
    Attributes:
        id:              AL142018
        operational_id:  AL142018
        name:            MICHAEL
        year:            2018
        season:          2018
        basin:           north_atlantic
        source_info:     NHC Hurricane Database
        source:          hurdat
        ace:             12.505000000000003



Retrieve pandas DataFrame object with Michael's data:


.. code-block:: default


    print(storm.to_dataframe())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

                      date  extra_obs special type   lat   lon  vmax  mslp       wmo_basin
    0  2018-10-06 18:00:00          0           LO  17.8 -86.6    25  1006  north_atlantic
    1  2018-10-07 00:00:00          0           LO  18.1 -86.9    25  1004  north_atlantic
    2  2018-10-07 06:00:00          0           TD  18.4 -86.8    30  1004  north_atlantic
    3  2018-10-07 12:00:00          0           TS  18.8 -86.4    35  1003  north_atlantic
    4  2018-10-07 18:00:00          0           TS  19.1 -85.7    45   999  north_atlantic
    5  2018-10-08 00:00:00          0           TS  19.7 -85.5    50   996  north_atlantic
    6  2018-10-08 06:00:00          0           TS  20.2 -85.4    60   984  north_atlantic
    7  2018-10-08 12:00:00          0           HU  20.9 -85.1    65   982  north_atlantic
    8  2018-10-08 18:00:00          0           HU  21.7 -85.1    75   977  north_atlantic
    9  2018-10-09 00:00:00          0           HU  22.7 -85.2    85   971  north_atlantic
    10 2018-10-09 06:00:00          0           HU  23.7 -85.8    85   973  north_atlantic
    11 2018-10-09 12:00:00          0           HU  24.6 -86.2    90   968  north_atlantic
    12 2018-10-09 18:00:00          0           HU  25.6 -86.4   100   961  north_atlantic
    13 2018-10-10 00:00:00          0           HU  26.6 -86.5   110   952  north_atlantic
    14 2018-10-10 06:00:00          0           HU  27.7 -86.6   120   945  north_atlantic
    15 2018-10-10 12:00:00          0           HU  29.0 -86.3   125   934  north_atlantic
    16 2018-10-10 17:30:00          1       L   HU  30.0 -85.5   140   919  north_atlantic
    17 2018-10-10 18:00:00          0           HU  30.2 -85.4   135   920  north_atlantic
    18 2018-10-11 00:00:00          0           HU  31.5 -84.5    80   957  north_atlantic
    19 2018-10-11 06:00:00          0           TS  32.8 -83.2    50   979  north_atlantic
    20 2018-10-11 12:00:00          0           TS  34.1 -81.7    45   987  north_atlantic
    21 2018-10-11 18:00:00          0           TS  35.6 -80.0    45   991  north_atlantic
    22 2018-10-12 00:00:00          0           EX  36.5 -77.7    50   988  north_atlantic
    23 2018-10-12 06:00:00          0           EX  37.3 -75.0    60   983  north_atlantic
    24 2018-10-12 12:00:00          0           EX  39.1 -70.6    60   980  north_atlantic
    25 2018-10-12 18:00:00          0           EX  41.1 -66.1    60   977  north_atlantic
    26 2018-10-13 00:00:00          0           EX  43.1 -61.5    65   975  north_atlantic
    27 2018-10-13 06:00:00          0           EX  44.8 -55.7    65   975  north_atlantic
    28 2018-10-13 12:00:00          0           EX  46.4 -48.2    65   975  north_atlantic
    29 2018-10-13 18:00:00          0           EX  47.6 -40.7    65   975  north_atlantic
    30 2018-10-14 00:00:00          0           EX  48.4 -33.1    65   975  north_atlantic
    31 2018-10-14 06:00:00          0           EX  48.8 -26.1    65   975  north_atlantic
    32 2018-10-14 12:00:00          0           EX  48.6 -20.7    60   975  north_atlantic
    33 2018-10-14 18:00:00          0           EX  47.5 -16.4    55   978  north_atlantic
    34 2018-10-15 00:00:00          0           EX  45.9 -13.5    55   982  north_atlantic
    35 2018-10-15 06:00:00          0           EX  44.4 -11.4    50   989  north_atlantic
    36 2018-10-15 12:00:00          0           EX  42.8 -10.3    35   996  north_atlantic
    37 2018-10-15 18:00:00          0           EX  41.2 -10.0    35  1001  north_atlantic



Visualize Michael's observed track with the "plot" function:

Note that you can pass various arguments to the plot function, such as customizing the map and track aspects. The only cartopy projection # currently offered is PlateCarree. Read through the documentation for more customization options.


.. code-block:: default


    storm.plot()




.. image:: /examples/images/sphx_glr_tracks.storm_001.png
    :class: sphx-glr-single-img




Plot the tornado tracks associated with Michael, along with the accompanying daily practically perfect forecast (PPH):

Note: There is currently a bug with this function that outputs 2 axes, a filled one and a blank one. This will be fixed in future updates.


.. code-block:: default


    storm.plot_tors(plotPPH=True)




.. image:: /examples/images/sphx_glr_tracks.storm_002.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    c:\users\tomer\documents\python\github\tomerburg_account\tropycal\src\tropycal\tracks\storm.py:1762: UserWarning: Reading in tornado data for this storm. If you seek to analyze tornado data for multiple storms, run "TrackDataset.assign_storm_tornadoes()" to avoid this warning in the future.
      warnings.warn(warn_message)
    --> Starting to read in tornado track data
    --> Completed reading in tornado data for 1950-2019 (10.78 seconds)



If this storm was ever in NHC's area of responsibility, you can retrieve operational NHC forecast data for this event provided it is available. Forecast discussions date back to 1992, and forecast tracks date back to 1954.

Retrieve a single forecast discussion for Michael:


.. code-block:: default


    #Method 1: Specify date closest to desired discussion
    disco = storm.get_nhc_discussion(forecast=dt.datetime(2018,10,7,0))
    print(disco['text'])

    #Method 2: Specify forecast discussion ID
    disco = storm.get_nhc_discussion(forecast=2)
    #print(disco['text']) printing this would show the same output





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Users\Tomer\Anaconda3\lib\site-packages\urllib3\connectionpool.py:858: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
      InsecureRequestWarning)
    C:\Users\Tomer\Anaconda3\lib\site-packages\urllib3\connectionpool.py:858: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
      InsecureRequestWarning)
    ZCZC MIATCDAT4 ALL
    TTAA00 KNHC DDHHMM

    Potential Tropical Cyclone Fourteen Discussion Number   2
    NWS National Hurricane Center Miami FL       AL142018
    1000 PM CDT Sat Oct 06 2018

    The cloud pattern has improved in organization and surface pressures
    are gradually falling, but there is no evidence that the system is
    a tropical cyclone at this time.  All indications are, however, that
    a tropical depression will likely form at any time soon. Strong wind
    shear is expected to affect the disturbance, and the SHIPS model
    only show a modest strengthening. This is in contrast to some global
    models and the HWRF, which are more aggressive in developing this
    system.  Since the environment is marginally favorable, the NHC
    forecast only gradually strengthens the system at the rate of the
    intensity consensus IVCN.  However, the forecast is highly uncertain
    given the solution of the global models.

    Since the system does not have a well-defined center, the initial
    motion is also uncertain. The best estimate is toward the north or
    360 degrees at 6 kt. Over the next 2 or 3 days, the cyclone will be
    embedded within the deep southerly flow between a strong subtropical
    ridge over the western Atlantic and a sharp mid-latitude trough
    advancing eastward over the United States.  This flow pattern will
    force the system to move northward at 5 to 10 kt across the
    eastern Gulf of Mexico for the next 2 to 3 days. By day 4, the
    system should have moved inland and be weakening. It should
    then race northeastward farther inland across the eastern U.S.  The
    track guidance envelope is remarkably quite tight. This increases
    the confidence in the track forecast primarily after the cyclone
    forms.

    Key Messages for Potential Tropical Cyclone Fourteen:

    1.  This system is producing heavy rainfall and flash flooding over
    portions of Central America, and these rains will spread over
    western Cuba and the northeastern Yucatan Peninsula of Mexico during
    the next couple of days.

    2.  The system is forecast to become a tropical storm by late
    Sunday, and tropical storm conditions are expected over portions of
    western Cuba, where a Tropical Storm Warning is in effect.

    3.  The system could bring storm surge, rainfall, and wind impacts
    to portions of the northern Gulf Coast by mid-week, although it is
    too soon to specify the exact location and magnitude of these
    impacts.  Residents in these areas should monitor the progress of
    this system.


    FORECAST POSITIONS AND MAX WINDS

    INIT  07/0300Z 18.8N  86.6W   25 KT  30 MPH...POTENTIAL TROP CYCLONE
     12H  07/1200Z 19.5N  86.5W   30 KT  35 MPH...TROPICAL CYCLONE
     24H  08/0000Z 21.0N  86.2W   35 KT  40 MPH
     36H  08/1200Z 22.3N  86.1W   40 KT  45 MPH
     48H  09/0000Z 23.8N  86.3W   45 KT  50 MPH
     72H  10/0000Z 27.4N  87.2W   55 KT  65 MPH
     96H  11/0000Z 32.0N  85.0W   30 KT  35 MPH...INLAND
    120H  12/0000Z 38.5N  77.5W   30 KT  35 MPH...INLAND

    $$
    Forecaster Avila

    NNNN

    C:\Users\Tomer\Anaconda3\lib\site-packages\urllib3\connectionpool.py:858: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
      InsecureRequestWarning)
    C:\Users\Tomer\Anaconda3\lib\site-packages\urllib3\connectionpool.py:858: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
      InsecureRequestWarning)



NHC also archives forecast tracks, albeit in a different format than the official advisory data, so the operational forecast IDs here differ from the discussion IDs. As such, the forecast cone is not directly retrieved from NHC, but is generated using an algorithm that yields a cone closely resembling the official NHC cone.

Let's plot Michael's second forecast cone:


.. code-block:: default


    storm.plot_nhc_forecast(forecast=2)




.. image:: /examples/images/sphx_glr_tracks.storm_003.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Users\Tomer\Anaconda3\lib\site-packages\urllib3\connectionpool.py:858: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
      InsecureRequestWarning)
    C:\Users\Tomer\Anaconda3\lib\site-packages\urllib3\connectionpool.py:858: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
      InsecureRequestWarning)



Now let's look at the 12th forecast for Michael.

Note that the observed track here differs from the HURDAT2 track plotted previously! This is because this plot displays the operationally analyzed location and intensity, rather than the post-storm analysis data. This is done to account for differences between HURDAT2 and operational data.


.. code-block:: default


    storm.plot_nhc_forecast(forecast=12)




.. image:: /examples/images/sphx_glr_tracks.storm_004.png
    :class: sphx-glr-single-img




IBTrACS Dataset
---------------

We can also read in IBTrACS data and use it the same way as we would use HURDAT2 data. There are caveats to using IBTrACS data, however, which are described more in depth in the :doc:`../data` page. We'll retrieve the global IBTrACS dataset, using the Joint Typhoon Warning Center (JTWC) data, modified with the Neumann reanalysis for southern hemisphere storms, and including a special reanalysis for Cyclone Catarina (2004) in Brazil.

.. warning::

    By default, IBTrACS data is read in from an online source. If you're reading in the global IBTrACS dataset, this could be quite slow.  For global IBTrACS, it is recommended to have the CSV file saved locally (`link to data`_), then set the flag ``ibtracs_url="local_path"``.

.. _link to data: https://www.ncei.noaa.gov/data/international-best-track-archive-for-climate-stewardship-ibtracs/v04r00/access/csv/ibtracs.ALL.list.v04r00.csv


.. code-block:: default


    ibtracs = tracks.TrackDataset(basin='all',source='ibtracs',ibtracs_mode='jtwc_neumann',catarina=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    --> Starting to read in ibtracs data
    --> Completed reading in ibtracs data (100.88 seconds)



The functionality for handling storms in IBTrACS is the same as with using HURDAT2, the only limitation being no NHC and operational model data can be accessed when using IBTrACS as the data source.

`Super Typhoon Haiyan`_ (2013) was a catastrophic storm in the West Pacific basin, having made landfall in the Philippines. With estimated sustained winds of 195 mph (170 kt), it is among one of the most powerful tropical cyclones in recorded history. We can illustrate this by making a plot of Haiyan's observed track and intensity, from JTWC data:

.. _Super Typhoon Haiyan: https://en.wikipedia.org/wiki/Typhoon_Haiyan


.. code-block:: default


    storm = ibtracs.get_storm(('haiyan',2013))
    storm.plot()




.. image:: /examples/images/sphx_glr_tracks.storm_005.png
    :class: sphx-glr-single-img




`Cyclone Catarina`_ (2004) was an extremely rare hurricane-force tropical cyclone that developed in the South Atlantic basin, which normally doesn't see tropical cyclone activity, and subsequently made landfall in Brazil. The "Catarina" name is unofficial; it was not assigned a name in real time, and JTWC assigned it the ID "AL502004". Recall that when reading in the IBTrACS dataset previously, we set ``Catarina=True``. This read in data for Cyclone Catarina from a special post-storm reanalysis from McTaggart-Cowan et al. (2006). Let's make a plot of Catarina's observed track and intensity per this reanalysis:

.. _Cyclone Catarina: https://en.wikipedia.org/wiki/Hurricane_Catarina


.. code-block:: default


    storm = ibtracs.get_storm(('catarina',2004))
    storm.plot()




.. image:: /examples/images/sphx_glr_tracks.storm_006.png
    :class: sphx-glr-single-img




If we were to read in IBTrACS without setting ``Catarina=True`` (which sets it to False by default) and plot the track for "AL502004", we would get a noticeably different (shorter) and weaker track.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  34.234 seconds)


.. _sphx_glr_download_examples_tracks.storm.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tracks.storm.py <tracks.storm.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tracks.storm.ipynb <tracks.storm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
